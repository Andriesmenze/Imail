Server_Client_VERSION = "1.0"
function newScreen()
    term.clear()
    term.setCursorPos(1, 1)
    print("IMail Server Utility V"..Server_Client_VERSION.." (API : "..iMail.iMail_VERSION..")")
end
while (true) do
    newScreen()
    print("")
    print("1 - Generate Client Registery key")
    print("2 - Create User")
    print("3 - Change User password")
    print("")
    print("Press enter to confirm")
    term.write("Option : ")
    local menu = read()
    if (menu == "1") then
        newScreen()
        print("")
        print("Are you Sure ?")
        print("This makes previous keys invalid")
        print("1 - Yes")
        print("2 - No")
        print("")
        term.write("Enter to Confirm : ")
        local confirmation = read()
        if (confirmation == "1") then
            newScreen()
            print("")
            local newkey = math.random(100, 999)
            settings.set("Registery_key", newkey)
            settings.save(".settings")
            print("The new Registery key is "..newkey)
            print("")
            print("Press enter to Return to Main menu")
            read()
        else
            newScreen()
            print("")
            print("Returning to Main menu")
            os.sleep(2)
        end
    elseif (menu == "2") then
        newScreen()
        print("User Creation")
        print("")
        term.write("Username : ")
        local username = read()
        iMail.createUser(username)
        newScreen()
        print("User Creation")
        print("")
        print("User created with a default blank password")
        print("")
        os.sleep(2)
        print("Press enter to Return to Main menu")
        read()
    elseif (menu == "3") then
        newScreen()
        print("change User Password")
        print("")
        term.write("Username : ")
        local username = read()
        if (settings.get(username) ~= nil) then
            term.write("New Password : ")
            local password = read("*")
            password = lEncrypt.encode(password)
            settings.set(username , password)
            settings.save(".settings")
            newScreen()
            print("change User Password")
            print("")
            print("User Password changed")
            print("")
            os.sleep(2)
            print("Press enter to Return to Main menu")
            read()
        else
            newScreen()
            print("change User Password")
            print("")
            print("User does not exist")
            print("")
            os.sleep(2)
            print("Press enter to Return to Main menu")
            read()
        end
    else
        newScreen()
        print("")
        print("Unvalid choice")
        os.sleep(2)
    end
end